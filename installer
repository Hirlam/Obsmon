#!/usr/bin/env Rscript
# Source needed files
argv <- commandArgs(trailingOnly = FALSE)
thisFilePath <- normalizePath(sub("--file=", "", argv[grep("--file=", argv)]))
sourcesDir <- file.path(dirname(thisFilePath), "src")
sourceFiles <- file.path(sourcesDir, c(
  "argparse_wrappers.R",
  "import_finder.R",
  "dependencies.R",
  "install.R",
  "get_sys_info.R",
  "create_local_repo.R"
))
for(sourceFile in sourceFiles) source(sourceFile)

cat("Getting imports and dependencies...\n")
cat("  * Getting recursive dependencies from", args$repos, "\n")
availablePkgsDb <- available.packages(repos=args$repos)
pkgDepsDf <- getImportedPkgsDepsDf(
  path=args$path,
  ignore_regex=args$ignore,
  availablePkgsDb=availablePkgsDb
)
depsSummaryDf <- summarisePkgDepsDf(
  pkgDepsDf,
  availablePkgsDb=availablePkgsDb
)

# Show dependency list
printDepsFromDf(depsSummaryDf)
if(args$listdeps) quit(status=0)

# Create local repo (and quit), if requested
if(!isFALSE(args$create_local_repo)) {
  cat("Creating local CRAN-like repo under", args$create_local_repo, "...\n\n")
  createLocalRepo(pkgsDf=depsSummaryDf, destdir=args$create_local_repo)
  cat("Done creating local CRAN-like repo.\n")
  cat("  > Path to sources:", args$create_local_repo, "\n")
  quit(status=0)
}

cat("Installing packages...\n")
installPkgsFromDf(
  df=depsSummaryDf,
  lib=args$install_path,
  repos=args$repos,
  available=availablePkgsDb,
  binDirs=args$bin_repo_path,
  binSaveDir=args$bin_save_path
)
cat("Done installing packages.\n")
