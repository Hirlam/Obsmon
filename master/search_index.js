var documenterSearchIndex = {"docs":
[{"location":"Collaborators/#collab","page":"Collaborators","title":"Collaborators","text":"","category":"section"},{"location":"Collaborators/","page":"Collaborators","title":"Collaborators","text":"Obsmon development greatly benefits from user input in the form of feature requests and occasional bug reports. This is appreciated and encouraged. Coding contributions are also welcome. The following people have made code contributions to obsmon up to the current version:","category":"page"},{"location":"Collaborators/","page":"Collaborators","title":"Collaborators","text":"Klaus Zimmermann (SMHI)\nPaulo Medeiros (SMHI, main developer at the moment)\nTrygve Aspelien (Met.no; original author of obsmon)\nUlf Andrae (SMHI)","category":"page"},{"location":"Collaborators/","page":"Collaborators","title":"Collaborators","text":"Please feel free to contact us if you wish to collaborate.","category":"page"},{"location":"Getting_obsmon/#getting-the-source","page":"Getting Obsmon","title":"Getting obsmon","text":"","category":"section"},{"location":"Getting_obsmon/#Downloading-the-source-code","page":"Getting Obsmon","title":"Downloading the source code","text":"","category":"section"},{"location":"Getting_obsmon/","page":"Getting Obsmon","title":"Getting Obsmon","text":"Obsmon v>=4.0.0 can be downloaded from GitHub. Open the terminal and enter the following command:","category":"page"},{"location":"Getting_obsmon/","page":"Getting Obsmon","title":"Getting Obsmon","text":"git clone https://github.com/Hirlam/obsmon.git ","category":"page"},{"location":"Getting_obsmon/","page":"Getting Obsmon","title":"Getting Obsmon","text":"The obsmon repo contains two main branches: master (the default) and devel. The master branch contains the official obsmon releases. The devel branch is generally ahead of master and contains code that will eventually make its way into the latter but needs some more testing before that. If you want to collaborate, you should branch off from devel.","category":"page"},{"location":"configfile/#config-file","page":"The config file","title":"The config file","text":"","category":"section"},{"location":"configfile/","page":"The config file","title":"The config file","text":"The next step after installation is to create a configuration file. Such a file has the main purpose of telling obsmon where to find your experiments, but it can also be used to control how the code works. It is written in TOML, which is similar to the widespread ini format.","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"Obsmon looks for a configuration file named config.toml under the following directories (listed in order of priority):","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"$HOME/.obsmon\n/etc/obsmon/$USER\nThe obsmon installation directory","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"Alternatively, you can instead provide the full path to a valid configuration file using the OBSMON_CONFIG_FILE environment variable, in which case you are free to choose the file name. This takes higher priority over the other options.","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"A TOML config file is made up of sections (called \\\"tables\\\" in TOML parlance). A valid config file for obsmon:","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"May contain one [general] section\nMust contain at least one [[experiments]] table\nMay contain multiple [[multiPlots]] sections\nMay contain one [domain] section","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"The next sections describe the config file options for the [general] and [[experiments]] tables. The configuration of [[multiPlots]] and [domain] will be discussed in multiplots, domains , respectively. An example of a simple config file is presented in 4.3. For a more complex config file example, see the config file template docs/config.toml.example. Options that have default values are optional.","category":"page"},{"location":"configfile/#config-file-general","page":"The config file","title":"Options for the [general] section","text":"","category":"section"},{"location":"configfile/","page":"The config file","title":"The config file","text":"As the name suggests, the [general] section controls how the code works in general. The currently available options are:","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"appTimeout: Time interval, in seconds, after which obsmon will   stop and exit after all browser sessions have been closed.\n  Default: \"Inf\"\n  Acceptable values: Any number greater than or equal to zero. Passing   invalid values will cause it to fall back to the default.\n  \n  This option is similar but not equal to the option sessionTimeout   described further below.\ncacheDir: User-configurable part of the path to where obsmon will   store its cache.\n  Default: $HOME/.obsmon/experiments_cache\n  \n  The path initially passed to this parameter will be further appended   by a directory named as obsmon_vMAJOR.MINOR. This is to avoid   conflict when updating obsmon. Furthermore, cache files for each   experiment will be stored separately inside directories named   according to the experiments' names. For more information on cache,   please read 5.7.\nconfigName: Name of your config file.\n  Default: \"\"\n  Acceptable values: Any string.\n  \n  The text assigned to configName (if any) will be printed out to   the logs as INFO (see option logLevel below), and will also be   displayed in the GUI (on the right-hand side of the place where the   code version info is displayed).\nlogLevel: Amount of detail that is logged.\n  Default: WARN\n  Valid values (in decreasing order of detail): TRACE, DEBUG,   INFO, WARN, ERROR and FATAL\nIn standalone mode, everything is logged to stderr\nIf running on a shiny server, then the log ends up in the   respective shiny server log. For more details about logging   while running on a shiny server, please take a look at the   shiny documentation for logging and   analytics\nmaxAvgQueriesPerProc: Maximum number of database queries (in   average) that a single process (computer thread) is allowed to   perform when preparing plots.\n  Default: \"Inf\"\n  Acceptable values: Any integer number greater than or equal to one,   or \\\"Inf\\\". Passing invalid values will cause it to fall back to the   default.\n  \n  Data for obsmon plots is stored in separate files for each DTG.   Therefore, if your plot requires nDTGs, then nDTGs independent   database files will be queried. With the maxAvgQueriesPerProc   option, these queries will be divided into   max{1, ceiling(nDTGs/maxAvgQueriesPerProc)} groups that will then   be processed in parallel.\n  \n  The optimal value for this parameter is, of course system-dependent,   and the default \"Inf\" leads to no query parallelisation.\nmaxExtraParallelProcs: Maximum number of extra tasks that obsmon   is allowed to execute, at any given time, in parallel to the main   process.\n  Default: 4 times #availableCores\n  Acceptable values: Any integer number greater than or equal to zero.   Passing invalid values will cause it to fall back to the default.\n  \n  Asynchronous/parallel tasks are used, e.g., to be able to load and   cache experiments without blocking the GUI, as well as to allow   having a \\\"cancel plot\\\" functionality. It is worth mentioning that:\nThese extra tasks are short-lived and are not usually   computationally intensive (not all at the same time, at least),   so we advise you not to set this parameter to a smaller value   unless you have good reasons to do so.\nThe OBSMON_MAX_N_EXTRA_PROCESSES environment variable can also   be used in order to control this setting, but the value set via   the config file takes precedence.\nmultiPlotsEnableInteractivity: Whether or not to allow   multiPlots (see 5.4 to be interactive.\n  Default: false\n  Accepted values: true or false\n  \n  We have chosen to make this option false by default to avoid   memory issues, as large numbers of individual plots may in principle   be generated within a single multiPlot. This is especially   important when deploying obsmon in a Shiny Server.[6]\nplotsEnableInteractivity: Whether or not to allow regular plots   to be interactive.\n  Default: true\n  Accepted values: true or false\nsessionTimeout: Time interval, in seconds, after which any idle   obsmon web session should be terminated.\n  Default: \"Inf\"\n  Acceptable values: Any number greater than or equal to zero. Passing   invalid values will cause it to fall back to the default.\n  \n  Users will receive at least 60s warning that their sessions will be   terminated if they remain idle.\nshowCacheOptions: Whether or not to show advanced cache options   (see 5.7.1).\n  Default: false\n  Accepted values: true or false\n","category":"page"},{"location":"configfile/#config-file-experiments","page":"The config file","title":"Options for the [[experiments]] section","text":"","category":"section"},{"location":"configfile/","page":"The config file","title":"The config file","text":"This the section where you tell obsmon how to locate your experiment files and how you want your experiments to be named. You should include one [[experiments]] section for each experiment, each section defining the following two keys:","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"displayName: Used to identify the experiment in the web   interface.\n  Accepted values: Any (you are free to choose the name of your   experiment)\npath: Path to the directory containing the experiment data.\n  Allowed values: Any valid experiment path. More details below.","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"Obsmon expects to find directories named ccma, ecma, ecma_sfc under the directory specified in path (or at least one of them). These directories are assumed to contain the databases corresponding to minimisation, screening and CANARI data, respectively. Each of these directories is expected to contain sub-directories named according to the standard dtg format YYYYmmddHH (one such directory for each available DTG in the experiment), which, in turn, should contain the actual database files, named, again respectively, ccma.db, ecma.db and ecma.db (sic).","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"Obsmon finds the data by combining into a single path (i) the value passed in path, (ii) the appropriate directory for minimisation, screening, or CANARI data, (iii) the date(s) and cycle(s) selected in the GUI, and finally (iv) the appropriate .db file.","category":"page"},{"location":"configfile/#config-file-example","page":"The config file","title":"Config file example","text":"","category":"section"},{"location":"configfile/","page":"The config file","title":"The config file","text":"A simple config file may look like the following:","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"[general]\n    logLevel = \"INFO\"\n    cacheDir = \".Rcache\"\n\n[[experiments]]\n    displayName = \"First Experiment\"\n    path = \"/full/path/to/experiment1\"\n\n[[experiments]]\n    displayName = \"Second Experiment\"\n    path = \"/full/path/to/experiment2\"","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"For a more complete example, please take a look at the template config file docs/config.toml.example. A few notes:","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"Comments can be added using a # character and are optional\nIndentation is also optional, but highly encouraged","category":"page"},{"location":"configfile/","page":"The config file","title":"The config file","text":"[6]: Problems are known to occasionally occur in this case. We have indeed experienced a few.","category":"page"},{"location":"Installing/#install","page":"Installing, Execturing updating","title":"Installing, executing and updating","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Use the install script to install the R libraries needed. The main system requirements are:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"A Linux operating system\nA working R (>= 4.0.5) interpreter\npython (>= 3.6.7)\nInternet connection","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Instructions for the various installation modes are given in install-standalone install-server, install-ecmwf. goes through the recommended steps to update the code. The required system packages are listed in 3.4, and the paths where obsmon looks for installed R libraries are listed in 3.3. Finally, the information presented in 3.5.2 about the use of pre-compiled binaries for the R libraries may save you a significant amount of time if you wish to install obsmon in multiple identical computers.","category":"page"},{"location":"Installing/#Installing-and-executing","page":"Installing, Execturing updating","title":"Installing and executing","text":"","category":"section"},{"location":"Installing/#install-standalone","page":"Installing, Execturing updating","title":"Standalone mode","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Go to the obsmon directory and execute:[2]\n     ./install\nIf required system packages are missing, then the installation   will stop. Install the relevant system package(s) and execute   ./install again. [Obsmon has helper scripts to install system   dependencies in some Linux distributions]{.underline} – see   3.4 for more details.\nYou may need to customise installation for some R-packages   (non-standard paths for system libraries, for instance). In such   cases, please use the install script's -ca and/or -cv   arguments. These options are, respectively, passed to the   configure.args and configure.vars arguments of R's   install.packages   function.\nCreate a config.toml. You can find a detailed discussion about the  configuration file in 4. Also, take a look at the template  config file docs/config.toml.example.\nTo run obsmon, just execute[3]\n     ./obsmon\nThe output will show something similar to\n     Listening on http://127.0.0.1:5391\nPoint your browser to the address you see in your output.[4]\nAlternatively, if you want the browser to open automatically, you  can run obsmon as\n     ./obsmon --launch","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Finally, for a list of command line options currently supported by obsmon in standalone mode, please run:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"./obsmon -h","category":"page"},{"location":"Installing/#install-server","page":"Installing, Execturing updating","title":"Through a Shiny Server","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"If you want to offer obsmon to a larger number of users, you may want to deploy it using a web server. A canonical choice in this case would be to use a Shiny Server. Shiny Server installation is beyond the scope of this document.In the following, we assume that the Shiny Server is already installed and running.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Put the obsmon directory into the site_dir directory as configured  in your shiny-server.conf, or, alternatively, add a location  stance to your shiny-server.conf listing the obsmon directory.\nYou may want to configure in your shiny-server.conf the   location of your log files. If you do not do so, they will most   likely end up somewhere such as   /var/log/shiny-server/obsmon-*.log, although this cannot be   guaranteed\nInstall the required R libraries. We recommend that you use the  included install script with the default settings.\nIf you don't follow the recommended install approach, then we   highly recommend that you manually specify the paths to the   directories where you installed the R libraries. You can do   this by using the .libPaths (R-language) command inside an   .Rprofile file placed in the obsmon directory. Otherwise, you   may have issues with conflicting R libraries between obsmon   and the shiny server.\nPut a valid config.toml file inside either the obsmon directory or  at /etc/obsmon. See the file docs/config.toml.example for a  template. See also 4.\nRun your Shiny Server and connect to it with your browser.","category":"page"},{"location":"Installing/#install-ecmwf","page":"Installing, Execturing updating","title":"At ECMWF (ecgb)","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"There are different options to get obsmon running at ECMWF (ecgate). In any case, the first step is to load the obsmon module, which is done by running the following commands (assumes that you are a member of the hirald group):","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"module use /perm/ms/se/snz/modulefiles\nmodule load obsmon","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"After this, you can choose to:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Use the pre-installed version of obsmon (recommended):\n \n Just set up a valid configuration file (see  4 for details about this) and then run  the obsmon command.\nMake your own install of obsmon:\n \n Follow the instructions given in  3.1.1.\n Take note of the major.minor version of R that was loaded when you  installed obsmon, and make sure to always use that same version of  R later on, when executing the code. This is because the  module load obsmon command sets up the environment so that (i) a  specific version of R is loaded and (ii) the installer can find  R-libraries pre-compiled for that particular version.\n  If you are not installing the latest version of obsmon, there may  not be pre-compiled R-libraries available for your particular  install. We unfortunately cannot provide much support if this  happens, and installation of the necessary R-libraries may require  help from ECMWF support. Therefore, we recommend that you use the  latest official release whenever possible if you want to have your  own install of obsmon.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Finally, a remark on using the browser remotely from ECMWF: This can unfortunately be very slow sometimes. If this is the case, then we strongly recommend that you run obsmon in batch mode (see 5.5. There is also an alternative to have faster access to the browser by using a NoMachine remote desktop. At the moment, however, we cannot provide instructions about the configuration of NoMachine at ECMWF. For this, we refer you to the \\\"NX service\\\" section of the ECaccess Web server page.","category":"page"},{"location":"Installing/#install-smhi","page":"Installing, Execturing updating","title":"At SMHI","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"You can follow the instructions given in 3.1.1, but you can substantially reduce installation time by passing an appropriate value to the -bin-repo-path option of the install script (to make use of pre-compiled binaries; more on this on 3.5.2. Please take a look at our internal Obsmon wiki page for more details. If you prefer, we can also produce a package that you can install using our package manager.","category":"page"},{"location":"Installing/#install-update","page":"Installing, Execturing updating","title":"Updating","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Please run:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"git pull –rebase && ./install","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"This assumes that:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"You have not modified obsmon\nYou have followed the recommended installation approach when first   installing the code.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Updating is normally faster than performing a completely new install, as obsmon tries to use pre-compiled binaries generated during the previous install/update (see 3.5.2). However, you may occasionally need to install new system dependencies when you update obsmon (see 3.4). N.B.: You should always update the code after having switched branches.","category":"page"},{"location":"Installing/#libPaths","page":"Installing, Execturing updating","title":"R library search paths","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Obsmon looks for R libraries installed in the following paths (listed in order of priority):","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":".installer_local_R-libs/R-libs\nThe default R library search paths. These vary depending on your  system.[5]","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"If you wish for obsmon to look somewhere else for R-libs, then you can, e.g., edit the .libPaths call in the .Rprofile file located inside the obsmon root directory.","category":"page"},{"location":"Installing/#sysdeps","page":"Installing, Execturing updating","title":"System dependencies","text":"","category":"section"},{"location":"Installing/#CentOS,-RHEL-or-Ubuntu","page":"Installing, Execturing updating","title":"CentOS, RHEL or Ubuntu","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"list the system dependencies for the R libraries used in obsmon under CentOS/RHEL and Ubuntu, respectively. You can find [helper scripts]{.underline} under utils/build to install system dependencies in these Linux distributions. Please feel free to notify us if any dependencies are missing. But please mind that these scripts are only [meant to guide you in your install process]{.underline}. We will gladly try to help you with this should you face problems, but [we can't guarantee that we will be able to do this for every system]{.underline}. If possible, [please refer to your IT department first for problems regarding system dependencies]{.underline}.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Required system package   First R lib that asks for it during install     ––––––––––––- ––––––––––––––––––––––- –          libXt-devel                            Cairo                               cairo-devel                            Cairo                              libcurl-devel                 DBI (via curl dependency)                    openssl-devel               DBI (via openssl dependency)                   libxml2-devel                 DBI (via xml2 dependency)                    mariadb-devel             dbplyr (via RMariaDB dependency)                  geos-devel                leaflet (via rgdal dependency)                   proj-devel                leaflet (via rgdal dependency)                    proj-epsg                leaflet (via rgdal dependency)                   gdal-devel                leaflet (via rgdal dependency)                    v8-devel                   shinyjs (via V8 dependency)          ","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":":  CentOS 7/RHEL 7 system dependencies for obsmon. The list was   produced by installing the code on a newly installed, minimal system   and keeping note of the packages required during the process. Many   other system packages are installed as dependencies of those listed   here and have been omitted. Last updated on 2018-03-22. :::","category":"page"},{"location":"Installing/#sysdeps-ubuntu","page":"Installing, Execturing updating","title":"sysdeps-ubuntu","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"Required system package     First R lib that asks for it during install","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"  libcurl4-openssl-dev                         curl                      \n       libssl-dev                             openssl                    \n      libxml2-dev                              xml2","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"libmariadb-client-lgpl-dev                    RMariaDB                              libcairo2-dev                            gdtools                              libgeos++-dev                             rgeos                                libgdal-dev                              rgdal                                 libxt-dev                               Cairo                               libv8-3.14-dev                             V8                       ","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":":  Ubuntu 18.04.2 LTS system dependencies for obsmon. The list was   produced by installing the code on a newly installed system and   keeping note of the packages required during the process. Many other   system packages are installed as dependencies of those listed here and   have been omitted. Last updated on 2019-05-28. :::","category":"page"},{"location":"Installing/#Other-Linux-distributions","page":"Installing, Execturing updating","title":"Other Linux distributions","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"There is currently no robust way to programmatically determine the system dependencies for all Linux distributions. The recommended approach at the moment is to proceed as indicated in install-standalone, install-server ,install-ecmwf  and install the system dependencies as they are requested during installation. You can nevertheless use the names of the Linux packages shown in sysdeps, sysdeps-ubuntu as reference, as, although the names change from one distribution to another, they are generally similar.","category":"page"},{"location":"Installing/#install-advanced","page":"Installing, Execturing updating","title":"Advanced install options","text":"","category":"section"},{"location":"Installing/#Changing-the-versions-of-the-installed-R-libraries","page":"Installing, Execturing updating","title":"Changing the versions of the installed R libraries","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"The provided install script uses metadata stored in the file .installer_local_pkg_repo/src/contrib/PACKAGES to solve R-package dependencies as well as determine which versions of them will be installed. We use this to ensure that the installs are reproducible, which greatly simplifies support and maintenance. There may be cases, however, where one may want/need to install package versions that are different from those in the aforementioned PACKAGES file. This can be accomplished by using either of the following options:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"(a) [[pkg_versions_control:cran_latest]]{#pkgversionscontrol:cranlatest     label=\"pkgversionscontrol:cranlatest\"} Running     ./install -repos=cran (instead of just ./install)","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"This instructs the install script to ignore the metadata in the\n`.installer_local_pkg_repo/src/contrib/PACKAGES` file and, instead,\nuse CRAN to determine the package versions and dependencies. This is\nthe best option if you want to install the latest versions of all\npackages.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"(b) [[pkg_versions_control:versions_file]]{#pkgversionscontrol:versionsfile     label=\"pkgversionscontrol:versionsfile\"} Creating an     .installer_pkg_versions.txt file","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"This allows you to handpick the versions of any number of used\nR-packages. A typical usage case would be to select specific\nversions of a few packages. Packages not listed in the file will\nhave their versions determined by the default method. You can create\na template file by running \"`./install listdeps –lock`\" and then\nedit it (keeping the same format).\n\n**N.B.:** Changing the versions of only selected R-packages can\ncause some dependencies to be broken. Use this option with caution.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"It is also possible to combine these options, which may be handy in some cases. Mind, however, that using R-libraries with versions different from the ones originally configured in obsmon can make it more difficult for us to provide you with support, should you need it.","category":"page"},{"location":"Installing/#install-precompiled","page":"Installing, Execturing updating","title":"Using pre-compiled binaries for the R libraries","text":"","category":"section"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"When you use the install script to install the R libraries needed by obsmon, it saves the binaries for all successfully compiled R libraries. Conversely, before attempting to compile any R library, the install script looks for appropriate binaries it may have previously compiled.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"This mechanism allows installation to resume from where it stopped in case it fails or is interrupted. Another (perhaps not so obvious) advantage is that it can lead to a very significant reduction in the installation times whenever:","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"You need to update obsmon\nYou need to install the code multiple times in the same computer  (e.g., for multiple users in an independent way)\nYou need to install obsmon in multiple identical computers","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"For updates, you just need to follow the recommended update approach (3.2). For the other cases, you only need to run the install script from scratch once. Then, for subsequent installs, you may (i) copy the appropriate pre-compiled libraries directory created during the first install run to some accessible location in your computer(s), and (ii) pass the path to this directory in the next install script run via the -bin-repo-path command line argument. By doing so, no libraries will be unnecessarily compiled.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"[2]: Please run ./install -h for more help about the install script.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"[3]: You can also put a symlink to the obsmon executable somewhere in your PATH. If you do so, you will be able to run obsmon as a command from any directory.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"[4]: This only works if the browser is running on the same machine as obsmon. Otherwise you will need to use something like SSH local port forwarding (e.g., ssh -L 5391:localhost:5391 user@computer) or, less preferably, X forwarding to connect to the server.","category":"page"},{"location":"Installing/","page":"Installing, Execturing updating","title":"Installing, Execturing updating","text":"[5]: You can check these out by using, for instance, the R function .libPaths().","category":"page"},{"location":"usingObsmon/#usage","page":"Using Obsmon","title":"Using obsmon","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Once installed (3) and minimally configured (4, obsmon is typically quite simple to use. This section discusses those features of the code that may be less straightforward to use, or about which we most commonly receive questions from users. If you have any doubts that are not covered here, you recommend you to take a look at the FAQ in 6.","category":"page"},{"location":"usingObsmon/#usage-plots-interactive","page":"Using Obsmon","title":"Interactive plots with editable elements","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Most plots in obsmon allow you to zoom, pan, hover etc. A less obvious but useful feature of these plots is the ability to hide and show parts of the plotted data. You can do so by single- or double-clicking on the items in the legend. You can also edit plot titles, legends, axes labels, as well as change the position of some of these elements by dragging them.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"This feature is enabled by default for regular plots, and it can switched off/on by using the config file option plotsEnableInteractivity (see 4.1). The default behaviour for multiPlots (5.4, on the other hand, is different, and interactivity is disabled for such plots unless otherwise specified via config file option multiPlotsEnableInteractivity.","category":"page"},{"location":"usingObsmon/#plotUnits","page":"Using Obsmon","title":"Physical Units in the Plots","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"For the plots in the main area, it is possible to customise the physical units used for some physical quantities. You can modify these by entering the name of the new units in the appropriate GUI text input. The new units must, of course, be compatible with the default ones.","category":"page"},{"location":"usingObsmon/#queryAndData","page":"Using Obsmon","title":"Explore The Data Used in Your Plots","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"For every plot, there is also available a Query & Data tab where you can find the SQLite query used to fetch the data along with the fetched raw data, as well as the aactuall data used in the plot.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Note that:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"The tables are searchable\nYou can use the arrows next to the tables' column labels to sort   data\nYou can sort by multiple columns by pressing the shift key   when clicking on these arrows\nYou can export the tables' data as text or CSV files","category":"page"},{"location":"usingObsmon/#multiplots","page":"Using Obsmon","title":"Producing multiple plots in one go with multiPlots","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"A multiPlot is a collection of multiple plots performed as a result of a single plot request. It provides a way to reduce the number of operations (or \"clicks\\\") a user needs to perform in order to generate multiple plots.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"The parameters for each multiPlot are defined in the configuration file through the use of [[multiPlot]] sections. In the following, we will discuss the main aspects of how to configure a multiPlot. There is no limit to the number of multiPlots that can be configured. To add a new multiPlot, just add a new [[multiPlot]] section to the configuration file. We encourage you to take a look at the template config file docs/config.toml.example for more concrete examples.","category":"page"},{"location":"usingObsmon/#multiplots-common-params","page":"Using Obsmon","title":"Parameters shared by all plots within the same multiPlot","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"The following parameters apply for all plots contained within a multiPlot and must be specified when defining a new multiPlot:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"displayName: Used to identify the multiPlot in the web   interface.\n  Accepted values: Any (you are free to choose the name of your   multiPlot).\nexperiment: Which experiment to use.\n  Accepted values: The displayName of a valid [[experiments]]   entry. See 4.2.\ndatabase: Which experiment database to get data from.\n  Accepted values: ccma, ecma or ecma_sfc.\nplotType: The type of plot that will be performed.\n  Accepted values: Any plotType ordinarily supported by obsmon\nDTG-related parameters.\n\nstartDate: A date in the \"YYYY-MM-DD\" format or an integer   number N less than or equal to zero. If the integer number   format is used, then it will represent a date   mid textttN mid days before the day the plot is   requested.\nendDate: A date in the \"YYYY-MM-DD\" format. Do not use this   if startDate is a negative integer or if nDays (see below)   is used.. The default, if startDate is not a negative integer   and nDays is not passed, is 'today' – whatever day today is.\nnDays: A non-negative integer number. Sets the end date for   the plot to startDate + nDays - 1. Do not use this if   startDate is a negative integer or if endDate is explicitly   set.\ncycles: Cycle number(s) in the \"HH\" format. E.g.: \"03\" (to   select a single cycle) or [\"00\", \"03\", \"12\"] (to select   multiple cycles).","category":"page"},{"location":"usingObsmon/#multiplots-minimal-config","page":"Using Obsmon","title":"Minimal [[multiPlot]] entry configuration","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"The parameters described in 5.4.1 are already enough for a minimal [[multiPlot]] configuration. The following definition, for instance, is a perfectly valid multiPlot entry:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"    [[multiPlots]]\n        displayName = \"A minimal multiPlot config entry\"\n        experiment = \"The name of my experiment\"\n        plotType = \"Number of Observations\"\n        database = \"ecma\"\n        startDate = -30","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Such an entry will create a multiPlot that will contain one plot of the \"Number of Observations\\\" type for every valid combination of observation type, name, variable, levels, station, satellite name, sensor, channels, etc. The default behaviour can thus be summarised as: Everything is included unless otherwise specified.","category":"page"},{"location":"usingObsmon/#Selecting-what-to-include/exclude-from-a-multiPlot","page":"Using Obsmon","title":"Selecting what to include/exclude from a multiPlot","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"The total number of individual plots composing a multiPlot depends on what you choose to include and/or exclude. As explained in 5.4.2, obsmon adopts the convention that a multiPlot will include everything that can possibly make sense within its context, unless specified otherwise.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Including and/or excluding parameters such as observation types, variables, levels, stations, satellites, channels, etc. is relatively simple. There are, however, many such options, and explaining them all here would take many more lines than actually writing down the corresponding entries in the configuration file. For this reason, we have instead produced a template config.toml.example file containing a comprehensive selection of examples on how to setup multiPlots. This file can be found under the docs directory.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"We highly recommend that you read and understand the template config file if you want to setup multiPlots, and we encourage you to copy the entries from that file and adapt them to what you need. Finally, feel free to get in touch should you think something is missing.","category":"page"},{"location":"usingObsmon/#batch-mode","page":"Using Obsmon","title":"Batch mode","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Batch mode allows producing plots without the use of the GUI. When run in batch mode, obsmon will produce the appropriate pre-configured plot(s), save the results in individual files (under appropriately named directories, see more below), and then exit.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"There are many usage scenarios where such a functionality can come in handy. For instance, remotely opening a web browser from ECMWF can be very slow, as discussed in 3.1.3. In such cases, one can run obsmon in batch mode and then retrieve the generated files via, e.g., ftp. Another usage case example would be calling obsmon from a script that runs as part of a cron job, thus allowing one to regularly produce plots without user intervention.","category":"page"},{"location":"usingObsmon/#batch-mode-configuration","page":"Using Obsmon","title":"Configuration of batch-mode plots","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Batch-mode plots in obsmon are simply multiPlots activated for this type of use. Therefore, the first step to configure a batch-mode plot is to setup a valid multiPlot as described in 5.4. Properly configured multiPlots can then be activated for use in batch mode by adding, under the main level in the corresponding [[multiPlots]] entry, either:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"A [multiPlots.batchMode] table, which may be empty or contain any   of the the following entries:\nenable: Whether or not to enable the multiPlot for use in   batch mode.\n  Default: true\n  Accepted values: true or false\nparentDir: Where to put the directory containing the plots   produced by the multiPlot when run in batch mode.\n  Default: The directory obsmon is being executed from.\n  Accepted values: Any path where the user running obsmon has   write access to. Both relative and absolute paths are accepted.   Relative paths are assumed to be relative to where obsmon is   being executed from. A parentDir may be shared by multiple   multiPlots.\ndirName: The name of the directory where to put the produced   plots. This is just the directory name. It will be prepended   by parentDir to generate a full path.\n  Default: obsmon_batch_MPNAME_TIMESTAMP, where MPNAME is a   version of the multiPlot's displayName in lowercase and with   any non-word   characters   (or sequence of such characters) replaced by a single   underscore, and TIMESTAMP is the time (in %H%M%S   format)   when the directory was created.\n  Accepted values: Any valid directory name such that the full   path parentDir/dirName does not already exist.\nfileType: The type of the graphics files produced.\n  Default: png\n  Accepted values: Most of the commonly used file types that   support saving graphics (e.g., pdf, jpeg, tiff, png,   bmp). Note, however, that this is system-dependent.[7]\ndpi: Resolution of the generated figures (in dots per inch).\n  Default: 300\n  Accepted values: Any integer greater than zero.\nfigHeight: Height of the generated figures (in inches).\n  Default: 6\n  Accepted values: Any number greater than zero.\nfigWidth: Width of the generated figures (in inches).\n  Default: 10\n  Accepted values: Any number greater than zero.\nExample (compare with   5.4.2):\n[[multiPlots]]           displayName = \"An arbitrary multiPlot\"           experiment = \"My experiment\"           plotType = \"Number of Observations\"           database = \"ecma\"           startDate = -30           [multiPlots.batchMode]               parentDir = \"/home/user/obsmon_batch_mode_plots\"","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"or, if you want to keep it simple,","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"batchMode = true\n  \n  And that is it. This is of course much simpler than going via option   (a), but it does not allow any customisation. Example (compare with   5.4.2):\n  [[multiPlots]]\n      displayName = \"An arbitrary multiPlot\"\n      experiment = \"My experiment\"\n      plotType = \"Number of Observations\"\n      database = \"ecma\"\n      startDate = -30\n      batchMode = true","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Using option (a) with an empty [multiPlots.batchMode] table has the same effect as using option (b). Finally, setting batchMode = false in option (b) is also allowed, in which case the corresponding multiPlot will, rather unsurprisingly, not become activated for use in batch mode.","category":"page"},{"location":"usingObsmon/#Running-obsmon-in-batch-mode","page":"Using Obsmon","title":"Running obsmon in batch mode","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Just use the –batch command line option:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"      ./obsmon --batch","category":"page"},{"location":"usingObsmon/#domains","page":"Using Obsmon","title":"Domain Geometry & Grid","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Interactive maps support the use of a domain's geometry and grid. If set, these are employed so that:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Display and domain projections match\nInitial zoom in config is based on the domain's boundaries\nPlots of the \\\"Average Maps\\\" type can perform grid-averages","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"To enable domain use, just enter valid configurations in the fields under the Domain Geometry & Grid tab in the GUI. The geometry and grid resolution parameters used in obsmon are a subset of those specified in Harmonie.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"To set default parameters, which will be loaded in the GUI at startup, you need to add a [domain] section to your config file. For example, to configure a coarser version of the the METCOOP25C domain, you can add the following section to your config file:","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"[domain]\n    nlon = 90      \n    nlat = 96\n    lonc = 16.763011639                             \n    latc = 63.489212956                                                                                 \n    lon0 = 15.0                         \n    lat0 = 63.0\n    gsize = 25000\n    lmrt = false","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"N.B.: Please pay special attention to the nlon, nlat and gsize parameters when copying configs from Harmonie domains. [The Harmonie grids are normally much thinner than you would typically want to use in obsmon, and using them without tweaking these parameters will most likely lead to long processing times for plots involving grid averages]{.underline}.","category":"page"},{"location":"usingObsmon/#cache","page":"Using Obsmon","title":"Caching","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Every time you select a new {experiment, database, DTG(s)} combination, obsmon collects metadata such as available observation types and names, variables and station IDs from the relevant data files. This information is then saved to sqlite cache files. Cached information is used to populate the menus in the GUI with choices that better reflect your experiments' data.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Caching occurs automatically and asynchronously. How long it takes for it to be completed depends on factors such as how many new DTGs you have selected or, for instance, whether your experiment's data files are located in the same computer as obsmon (faster) or in a network mount point (slower). While caching is not finished (or if cache information cannot be retrieved for whatever reason), the menus in the GUI become populated with a set of default values. [You can therefore continue to explore your data even if cached info is unavailable or incomplete]{.underline}.","category":"page"},{"location":"usingObsmon/#advanced-cache-opts","page":"Using Obsmon","title":"Advanced cache options","text":"","category":"section"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"Advanced cache-related options can be enabled either by setting the parameter showCacheOptions to true in the config file (see 4.1) or by creating a file named .obsmon_show_cache_options inside the main obsmon directory. The GUI will then feature two buttons that allow rewriting or resetting the cache files. You would typically use this to solve problems with a corrupted cache file.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"These buttons are hidden by default to prevent individual users from changing the contents of cache files when using a single shared obsmon installation (be it available locally or via web). Nevertheless, is safe to use these advanced cache-resetting options if you know you won't inadvertently affect other users. In fact, it is actually safe to manually remove the cache files if the same circumstances apply. In the worst case scenario, completely resetting/removing the cache files will only cause obsmon to re-cache information when/if necessary. Your experiments' data files will not be affected if you click on any of these buttons.","category":"page"},{"location":"usingObsmon/","page":"Using Obsmon","title":"Using Obsmon","text":"[7]: For more details, see the documentation of the ggsave function from the ggplot2 R package.","category":"page"},{"location":"gettingSupport/#getting-support","page":"Getting Support","title":"Getting support","text":"","category":"section"},{"location":"gettingSupport/","page":"Getting Support","title":"Getting Support","text":"If reading the documentation and using the \"-h\" option in both the 'obsmon' and 'install' scripts still doesn't help you, please take a look at the webpage github.com/Hirlam/obsmon/issues. Please browse the list of open and closed issues to see if the one you are experiencing has already been reported. If it has been reported, you are encouraged to participate in the discussion and also to upvote it. If it has not, please fell free to open a new issue there.","category":"page"},{"location":"gettingSupport/","page":"Getting Support","title":"Getting Support","text":"When opening a new issue, please remember to include as much information as you can so that we can try to replicate the problem. At the very least, you should include:","category":"page"},{"location":"gettingSupport/","page":"Getting Support","title":"Getting Support","text":"The version of obsmon you are using (it helps to include the start   banner obsmon prints out, if possible)\nYour operating system name and version\nA copy of any relevant logfile\nRelevant output produced by the code\nScreen prints whenever possible","category":"page"},{"location":"gettingSupport/","page":"Getting Support","title":"Getting Support","text":"Doing so greatly simplifies the process of providing support.","category":"page"},{"location":"faq/#faq","page":"Frequently asked Questions","title":"Frequently asked questions","text":"","category":"section"},{"location":"faq/#questions-about-installation","page":"Frequently asked Questions","title":"Questions about installation","text":"","category":"section"},{"location":"faq/","page":"Frequently asked Questions","title":"Frequently asked Questions","text":"Do I need root (admin) permissions to install obsmon?\n  \n  A: In general yes (but not at ECMWF). In most cases, you should at   least be able to run your system's package installer using sudo   (e.g., sudo yum or sudo apt-get), so you can install the system   dependencies.\nInstallation is taking too long. Is there any way to speed it up?\n  \n  A: Generally not, unfortunately. Many of the required R libraries   need to be compiled and they, in turn, generally require extra   system packages to be installed. If you plan to install obsmon   multiple times, however, please read   3.5.2. Note also that if   installation is restarted after failure or interruption it will   resume from where it stopped, not start from scratch.\nI want to install a different version of R-lib X instead of the   one that the install script is using. How do I do this?\n  \n  A: See 3.5.\nMy installation fails and I cannot see why. What do I do?\n  \n  A: Please run \"./install –live\". This will print all installation   messages in real time.","category":"page"},{"location":"faq/#questions-about-caching","page":"Frequently asked Questions","title":"Questions about caching","text":"","category":"section"},{"location":"faq/","page":"Frequently asked Questions","title":"Frequently asked Questions","text":"The popup info in the some UI menus says that cache is ongoing. What   does that mean and what should I do?\n  \n  A: That just means that obsmon has not yet cached all information it   needs about the selected experiment/database/DTG(s) in order to   accurately populate the menus' choices. The presented values may   change in such cases. Whenever applicable, you will be offered   choices that combine some defaults and whatever has already been   cached. You normally do not need to do anything: the message will   disappear as soon as caching is finished. You can continue to use   obsmon even if this message is shown.","category":"page"},{"location":"faq/#questions-about-plotting","page":"Frequently asked Questions","title":"Questions about plotting","text":"","category":"section"},{"location":"faq/","page":"Frequently asked Questions","title":"Frequently asked Questions","text":"My plot says \"Query returned no data\\\". What does that mean?\n  \n  A: That means that your experiment does not contain the data needed   for the plot according to the parameters you chose. This should be a   rare occurrence when cache finishes normally, but can happen more   often when caching is not available or incomplete.\nMy plot says \"Could not produce plot: The required data file(s)   might be inaccessible.\\\". What does that mean?\n  \n  A: That may indicate that the required experiment data files are not   available. Please double-check that they exist. Contact us if they   do.\nMy plot is empty. What happened?\n  \n  A: The most probably cause is that data associated with your plot   request could indeed be found, but the number of observations is   zero. Please take a look at the data under the \"Query and Data\\\"   tab.\nHow do I save my plot as a figure?\n  \n  A: If the plot is interactive (e.g., if you can zoom in), then you   will find such an option in the menu that appears on the top right   of the figure when you place the mouse over it. If the plot is not   interactive, you can just right-click with your mouse and choose to   save it.\nHow can I save the data used to produce my plot?\n  \n  A: Go to the \"Query and Data\\\" tab and click in the appropriate   button to export the data as txt or csv.","category":"page"},{"location":"faq/#questions-about-multiplots","page":"Frequently asked Questions","title":"Questions about multiPlots","text":"","category":"section"},{"location":"faq/","page":"Frequently asked Questions","title":"Frequently asked Questions","text":"I do not see a multiPlots tab in the GUI, even though I have   configured a multiPlot. What happened?\n  \n  A: This indicates that there may be an error in the configuration of   your multiPlots. Obsmon will only feature a multiPlots tab if at   least one valid multiPlot configuration is found.\nI do not see one (or more) of my multiPlots in the list. What   happened?\n  \n  A: This most likely means that there is an error in the   configuration of the missing multiPlots. Obsmon will only show the   multiPlots for which the configuration passed without errors.\nMy multiPlot is taking too long to finish. What is going on?\n  \n  A: How long it takes for a multiPlot to be completed depends on   factors such as how much you have chosen to include or exclude from   the plots (see 5.4), as well as where the required data   files are located (faster if stored locally, slower if stored   remotely). If you specify a date range, then longer time spans will   naturally imply longer processing times for the multiPlots, as   each new DTG corresponds to a new file to query data from.   Additionally, some plots, such as \"Station Diagnostics\\\", require   some statistics to be performed on the data before it can be   plotted. This can also increase processing times.\nMy multiPlots are not interactive. What happened?\n  \n  A: Interactivity is switched off by default in the case of   multiPlots. It can be switched on using the   multiPlotsEnableInteractivity config file option. See   4.1","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Obsmon is a tool for observation monitoring in the Harmonie-Arome NWP System. It allows the analysis and visualisation of data produced by prepObsmon. This document refers only to obsmon, and not to prepObsmon.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Obsmon is written in R using the Shiny web application framework. It can be deployed as a local, standalone application or even remotely through the use of a web server (for instance, using a Shiny Server). This document contains information about how to get (2.1, install (3 and configure (4 obsmon, as well as tips on how to use some of the non-trivial features of the code (5). If you find that something is missing or needs to be corrected, please feel free to contact us.","category":"page"}]
}
